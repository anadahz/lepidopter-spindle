#!/bin/sh                
# Part of spindle http://asbradbury.org/projects/spindle
#                        
# See LICENSE file for copyright and license details
set -e

. ./config

run_qemu() {
  rm fifo.out fifo.in || true
  mkfifo fifo.out fifo.in
  qemu-system-arm -M versatilepb -cpu arm1136-r2 -m 256 -nographic -no-reboot \
        -kernel zImage -hda qemu_rootfs.sqf -drive file=$1,index=1,media=disk,cache=unsafe \
        -drive file=wheezy_apt_cache.$IMGFORMAT,index=2,media=disk,cache=unsafe \
        -append "root=/dev/sda rw init=/sbin/init.sh panic=1 PATH=/bin:/sbin console=ttyAMA0 HOST=armv6l"\
        -net nic,model=rtl8139 -net user -redir tcp:22000::22 -daemonize -serial pipe:fifo \
        -pidfile qemu.pid
  sleep 10
} 

ssh_in_to_qemu() {
  ssh -i qemu_arm_key -p 22000 -lroot localhost "$@"
} 

scp_in_to_qemu() {
  scp -i qemu_arm_key -P 22000 "$1" root@localhost:"$2"
} 

scp_r_from_qemu() {
  scp -r -i qemu_arm_key -P 22000 root@localhost:"$1" "$2"
} 

onvm_chroot() {
  ssh_in_to_qemu chroot /mnt "$@"
} 

shutdown_qemu() {
  ssh_in_to_qemu "sync && umount -a" || true
  echo "exit" > fifo.in
  sleep 5
  if [ -e qemu.pid ]; then
    QEMU_PID=$(cat qemu.pid)
    while [ -n "$QEMU_PID" ]; do
      set +e
      kill -0 $QEMU_PID 2>/dev/null
      if [ $? -eq 0 ]; then
        printf "Qemu pid %s not finished yet. Waiting\n" "$QEMU_PID"
        sleep 1
      else
        QEMU_PID=""
      fi
      set -e
    done
  fi
  rm fifo.in
  rm fifo.out
#  sleep 15
}

attach_image_to_nbd() {
  # use -v as we seem to have problems otherwise...
  sudo qemu-nbd --nocache -v -c $2 $1 &
  sleep 5
} 

detach_image_from_nbd() {
  sudo qemu-nbd -d $1
} 

inspect_image() {
  cd work
  qemu-img create -f $IMGFORMAT -b ../$1 temp.$IMGFORMAT
  # Sigh http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=390433
  trap '[ -p fifo.in ] && shutdown_qemu' EXIT
  trap '[ -p fifo.in ] && shutdown_qemu; trap - INT; kill -INT $$' INT
  run_qemu temp.$IMGFORMAT
  ssh_in_to_qemu # -t chroot /mnt bash -l
  shutdown_qemu
  cd $OLDPWD
/check


convert_image() {
  qemu-img convert -f $IMGFORMAT -O raw $1 $2
}

export_image_for_release() {
  cd work
  qemu-img create -f $IMGFORMAT -b ../$1 temp.$IMGFORMAT
  run_qemu temp.$IMGFORMAT
  # Change mirror in sources.list to our preferred one. This will go horribly
  # wrong if there is more than one entry in sources.list
  onvm_chroot sh -l -ex <<\EOF
if grep armhf /etc/rpi-issue; then
  sed -i /etc/apt/sources.list -e "s|^deb [^ ]*|deb http://mirrordirector.raspbian.org/raspbian/|"
else
  sed -i /etc/apt/sources.list -e "s|^deb [^ ]*|deb http://http.debian.net/debian|"
fi

apt-get update
apt-get install -y raspi-copies-and-fills
#/etc/init.d/fake-hwclock stop # save current time
#rm /usr/bin/raspi-config
#cd /usr/bin
#wget https://raw.github.com/asb/raspi-config/master/raspi-config
#chmod +x raspi-config
EOF
  shutdown_qemu
  attach_image_to_nbd temp.$IMGFORMAT /dev/nbd0
  sudo zerofree -v /dev/nbd0p2
  mkdir -p rootfs boot
  sudo mount $BOOT_DEV boot
  sudo mount $ROOT_DEV rootfs
  sudo cp rootfs/etc/rpi-issue boot/issue.txt
  
  sudo umount $BOOT_DEV
  sudo umount $ROOT_DEV
  echo "we are previous detach"
  detach_image_from_nbd /dev/nbd0
  echo "we are previous convert"
  qemu-img check temp.$IMGFORMAT
  convert_image temp.$IMGFORMAT ../$2
  echo "we are post convert"
}

disable_starting_services() {
  ssh_in_to_qemu chroot /mnt sh -ex - <<EOF
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
echo "Debugging printf"
printf '#!/bin/sh\nexit 101\n' > /usr/sbin/policy-rc.d
chmod 755 /usr/sbin/policy-rc.d
EOF
}

allow_starting_services() {
  ssh_in_to_qemu chroot /mnt sh -ex - <<EOF
rm /usr/sbin/policy-rc.d
EOF
}

save_space_using_hardlink() {
  onvm_chroot sh -l -e - <<\EOF
hardlink -t /usr/share/doc
EOF
}

mount_apt_cache() {
  ssh_in_to_qemu sh -e - <<EOF
  mount -o noatime /dev/sdc /mnt/var/cache/apt
EOF
}

download_if_necessary() {
  [ -f $(basename "$1") ] || wget "$1"
}

get_git_hash() {
  git log --pretty=format:'%h' -n 1
}

update_issue() {
  GIT_HASH=$(get_git_hash) &&
